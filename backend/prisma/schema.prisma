// Nesta página, um esquema de banco de dados está sendo definido usando Prisma.
// O esquema possui três modelos: Client, Pet e Scheduling. Cada modelo representa
// uma entidade do banco de dados, como cliente, animal de estimação e agendamento.
// Os modelos têm campos específicos, como nome, tipo, status, e relacionamentos definidos entre eles,
// como a relação entre clientes e seus animais de estimação (client_pets). O banco de dados é configurado
// para usar o provedor SQLite, e os modelos são mapeados para tabelas específicas no banco de dados.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Client {
  id          Int       @id @default(autoincrement())
  name        String
  email       String
  phone       String
  pets        Pet[]     @relation("client_pets")
  schedulings Scheduling[] @relation("client_schedulings")
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  @@map("client")
}

model Pet {
  id          Int       @id @default(autoincrement())
  name        String
  type        String
  client      Client    @relation("client_pets", fields: [client_id], references: [id])
  client_id   Int
  schedulings Scheduling[] @relation("pet_schedulings")
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  @@map("pet")
}

model Scheduling {
  id           Int       @id @default(autoincrement())
  status       String    @default("open")
  client       Client?    @relation("client_schedulings", fields: [client_id], references: [id])
  client_id    Int?
  pet          Pet?      @relation("pet_schedulings", fields: [pet_id], references: [id])
  pet_id       Int?
  scheduled_at DateTime
  created_at   DateTime? @default(now())
  updated_at   DateTime? @default(now())

  @@map("scheduling")
}
